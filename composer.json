{
    "name": "minvws/audit-logger",
    "description": "Generic audit logger",
    "keywords": [
        "audit",
        "logging"
    ],
    "type": "library",
    "license": "EUPL",
    "require": {
        "php": "^8.1",
        "nesbot/carbon": "^2.70 | ^3.0",
        "psr/log": "^3.0",
        "symfony/http-foundation": "^6.0 | ^7.0"
    },
    "require-dev": {
        "dg/bypass-finals": "^1.6",
        "mockery/mockery": "^1.6.7",
        "overtrue/phplint": "^5.5 | ^9.1",
        "phpstan/phpstan": "^1.10",
        "phpstan/phpstan-mockery": "^1.1",
        "phpstan/phpstan-strict-rules": "^1.5",
        "phpunit/phpunit": "^10.2",
        "slevomat/coding-standard": "^8.14",
        "spatie/phpunit-snapshot-assertions": "^5.1",
        "squizlabs/php_codesniffer": "^3.8",
        "symfony/var-dumper": "^6.0 | ^7.0"
    },
    "autoload": {
        "psr-4": {
            "MinVWS\\AuditLogger\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "MinVWS\\AuditLogger\\Tests\\": "tests/"
        }
    },
    "scripts": {
        "lint": "XDEBUG_MODE=off phplint --exclude=vendor .",
        "checkstyle": "XDEBUG_MODE=off phpcs",
        "fixstyle": "XDEBUG_MODE=off phpcbf",
        "checktype": "XDEBUG_MODE=off phpstan analyse --error-format=prettyJson | phpstan.json",
        "update-type-baseline": "XDEBUG_MODE=off phpstan --generate-baseline",
        "test": "XDEBUG_MODE=off phpunit -d --without-creating-snapshots",
        "test-report": "XDEBUG_MODE=coverage phpunit --log-junit=report-phpunit.xml --coverage-text --coverage-clover=coverage-phpunit.xml",
        "update-test-snapshots": "XDEBUG_MODE=off phpunit -d --update-snapshots",
        "checkall": [
            "@lint",
            "@checkstyle",
            "@checktype",
            "@test"
        ]
    },
    "scripts-descriptions": {
        "lint": "Lint PHP files",
        "checkstyle": "Check code style using php_codesniffer",
        "fixstyle": "Fix code style using php_codesniffer",
        "checktype": "Check code type using PHPStan",
        "update-type-baseline": "Update PHPStan baseline",
        "test": "Run PHPUnit tests",
        "test-report": "Run PHPUnit tests with coverage report",
        "update-test-snapshots": "Update PHPUnit snapshots",
        "checkall": "Run all checks including test"
    },
    "extra": {
        "branch-alias": {
            "dev-main": "1.0-dev"
        }
    },
    "config": {
        "sort-packages": true,
        "allow-plugins": {
            "dealerdirect/phpcodesniffer-composer-installer": true
        }
    },
    "minimum-stability": "dev",
    "prefer-stable": true
}
